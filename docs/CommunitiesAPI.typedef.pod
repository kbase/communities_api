=pod

=head1 module CommunitiesAPI

microbial communities object and resource API
For usage note that required parameters need to be passed as path parameters, optional parameters need to be query parameters. If an optional parameter has a list of option values, the first displayed will be used as default.

=head2 GetAnnotationSequence

=head3 Description

All annotations of a metagenome for a specific annotation type and source
tab deliminted annotated sequence stream

=head3 Parameters

=over4

=item * string source

This parameter value can be chosen from the following (the first being default):

 RefSeq - protein database, type organism, function, feature
 GenBank - protein database, type organism, function, feature
 IMG - protein database, type organism, function, feature
 SEED - protein database, type organism, function, feature
 TrEMBL - protein database, type organism, function, feature
 SwissProt - protein database, type organism, function, feature
 PATRIC - protein database, type organism, function, feature
 KEGG - protein database, type organism, function, feature
 RDP - RNA database, type organism, function, feature
 Greengenes - RNA database, type organism, function, feature
 LSU - RNA database, type organism, function, feature
 SSU - RNA database, type organism, function, feature
 Subsystems - ontology database, type ontology only
 NOG - ontology database, type ontology only
 COG - ontology database, type ontology only
 KO - ontology database, type ontology only

=item * string filter

text string to filter annotations by: only return those that contain text

=item * int length

value for minimum alignment length cutoff: default is 15

=item * int identity

percent value for minimum % identity cutoff: default is 60

=item * int evalue

negative exponent value for maximum e-value cutoff: default is 5

=item * string type

This parameter value can be chosen from the following (the first being default):

 organism - return organism data
 function - return function data
 ontology - return ontology data
 feature - return feature data

=item * string id

unique metagenome identifier

=item * string filter_level

hierarchal level to filter annotations by, for organism or ontology only


=back

=head3 Return Attributes

=over4

=item * mapping<string, string> streaming text

tab deliminted annotated sequence stream

=head2 GetAnnotationSimilarity

=head3 Description

All annotations of a metagenome for a specific annotation type and source
tab deliminted blast m8 with annotation

=head3 Parameters

=over4

=item * string source

This parameter value can be chosen from the following (the first being default):

 RefSeq - protein database, type organism, function, feature
 GenBank - protein database, type organism, function, feature
 IMG - protein database, type organism, function, feature
 SEED - protein database, type organism, function, feature
 TrEMBL - protein database, type organism, function, feature
 SwissProt - protein database, type organism, function, feature
 PATRIC - protein database, type organism, function, feature
 KEGG - protein database, type organism, function, feature
 RDP - RNA database, type organism, function, feature
 Greengenes - RNA database, type organism, function, feature
 LSU - RNA database, type organism, function, feature
 SSU - RNA database, type organism, function, feature
 Subsystems - ontology database, type ontology only
 NOG - ontology database, type ontology only
 COG - ontology database, type ontology only
 KO - ontology database, type ontology only

=item * string filter

text string to filter annotations by: only return those that contain text

=item * int length

value for minimum alignment length cutoff: default is 15

=item * int identity

percent value for minimum % identity cutoff: default is 60

=item * int evalue

negative exponent value for maximum e-value cutoff: default is 5

=item * string type

This parameter value can be chosen from the following (the first being default):

 organism - return organism data
 function - return function data
 ontology - return ontology data
 feature - return feature data

=item * string id

unique metagenome identifier

=item * string filter_level

hierarchal level to filter annotations by, for organism or ontology only


=back

=head3 Return Attributes

=over4

=item * mapping<string, string> streaming text

tab deliminted blast m8 with annotation

=cut

=head2 PostComputeNormalize

=head3 Description

Calculate a PCoA for given input data.
Calculate normalized values for given input data.

=head3 Parameters

=over4

=item * list<string> columns

column id

=item * list<list> data

raw value

=item * list<string> rows

row id


=back

=head3 Return Attributes

=over4

=item * list<string> columns

column id

=item * list<list<float>> data

normalized value

=item * list<string> rows

row id

=head2 PostComputeHeatmap

=head3 Description

Calculate a PCoA for given input data.
Calculate a dendogram for given input data.

=head3 Parameters

=over4

=item * string cluster

This parameter value can be chosen from the following (the first being default):

 ward - ward cluster method
 single - single cluster method
 complete - complete cluster method
 mcquitty - mcquitty cluster method
 median - median cluster method
 centroid - centroid cluster method

=item * string distance

This parameter value can be chosen from the following (the first being default):

 bray-curtis - bray-curtis distance method
 euclidean - euclidean distance method
 maximum - maximum distance method
 manhattan - manhattan distance method
 canberra - canberra distance method
 minkowski - minkowski distance method
 difference - difference distance method

=item * list<string> columns

column id

=item * list<list> data

raw or normalized value

=item * list<string> rows

row id

=item * int raw

option to use raw data (not normalize)


=back

=head3 Return Attributes

=over4

=item * list<float> colindex

column id index

=item * mapping<string, string> coldend

dendogram object for columns

=item * list<float> rowindex

row id index

=item * list<string> columns

column id

=item * list<list<float>> data

normalized value

=item * mapping<string, string> rowdend

dendogram object for rows

=item * list<string> rows

row id

=head2 PostComputePcoa

=head3 Description

Calculate a PCoA for given input data.
Calculate a PCoA for given input data.

=head3 Parameters

=over4

=item * string distance

This parameter value can be chosen from the following (the first being default):

 bray-curtis - bray-curtis distance method
 euclidean - euclidean distance method
 maximum - maximum distance method
 manhattan - manhattan distance method
 canberra - canberra distance method
 minkowski - minkowski distance method
 difference - difference distance method

=item * list<string> columns

column id

=item * list<list> data

raw or normalized value

=item * list<string> rows

row id

=item * int raw

option to use raw data (not normalize)


=back

=head3 Return Attributes

=over4

=item * list<float> pco

average principal component value

=item * list<mapping<string, string>> data

pcoa object

=cut

=head2 GetDownloadInstance

=head3 Description

An analysis file from the processing of a metagenome from a specific stage in its analysis
Returns a single sequence file.

=head3 Parameters

=over4

=item * string file

file name or identifier

=item * string id

unique metagenome identifier


=back

=head3 Return Attributes

=over4

=item * string data

requested analysis file

=head2 GetDownloadSetlist

=head3 Description

An analysis file from the processing of a metagenome from a specific stage in its analysis
Returns a list of sets of sequence files for the given id.

=head3 Parameters

=over4

=item * string stage

stage name or identifier

=item * string id

unique metagenome identifier


=back

=head3 Return Attributes

=over4

=item * string stage_name

name of the stage in processing of this file

=item * string file_name

name of the analysis file

=item * string url

url for retrieving this analysis file

=item * string id

unique metagenome identifier

=item * string file_id

unique identifier of file in stage

=item * string stage_type

type of the analysis file within a stage, i.e. passed or removed for quality control steps

=item * string stage_id

three digit numerical identifier of the stage

=cut

=head2 GetInboxView

=head3 Description

inbox receives user inbox data upload, requires authentication, see http://blog.metagenomics.anl.gov/mg-rast-v3-2-faq/#api_submission for details
lists the contents of the user inbox

=head3 Parameters

=over4

=item * string auth

unique string of text generated by MG-RAST for your account


=back

=head3 Return Attributes

=over4

=item * string timestamp

timestamp for return of this query

=item * list<mapping<string, string>> files

list of file objects

=item * string url

resource location of this object instance

=item * string id

user login

=head2 PostInboxUpload

=head3 Description

inbox receives user inbox data upload, requires authentication, see http://blog.metagenomics.anl.gov/mg-rast-v3-2-faq/#api_submission for details
receives user inbox data upload

=head3 Parameters

=over4

=item * string auth

unique string of text generated by MG-RAST for your account

=item * string upload

file to upload to inbox


=back

=head3 Return Attributes

=over4

=item * string timestamp

timestamp for return of this query

=item * string status

status message

=item * string id

user login

=cut

=head2 GetLibraryQuery

=head3 Description

A library of metagenomic samples from some environment
Returns a set of data matching the query criteria.

=head3 Parameters

=over4

=item * string verbosity

This parameter value can be chosen from the following (the first being default):

 minimal - returns only minimal information

=item * string order

This parameter value can be chosen from the following (the first being default):

 id - return data objects ordered by id
 name - return data objects ordered by name

=item * int limit

maximum number of items requested

=item * int offset

zero based index of the first data object to be returned


=back

=head3 Return Attributes

=over4

=item * string next

link to the previous set or null if this is the first set

=item * string prev

link to the next set or null if this is the last set

=item * string order

name of the attribute the returned data is ordered by

=item * int limit

maximum number of data items returned, default is 10

=item * list<mapping<string, string>> data

list of the library objects

=item * int offset

zero based index of the first returned data item

=item * int total_count

total number of available data items

=head2 GetLibraryInstance

=head3 Description

A library of metagenomic samples from some environment
Returns a single data object.

=head3 Parameters

=over4

=item * string verbosity

This parameter value can be chosen from the following (the first being default):

 minimal - returns only minimal information
 verbose - returns a standard subselection of metadata
 full - returns all connected metadata

=item * string id

unique object identifier


=back

=head3 Return Attributes

=over4

=item * int version

version of the object

=item * string project

reference to the project object

=item * string name

human readable identifier

=item * string metagenome

reference to the related metagenome object

=item * string created

time the object was first created

=item * string url

resource location of this object instance

=item * string id

unique object identifier

=item * string sample

reference to the related sample object

=item * mapping<string, string> metadata

key value pairs describing metadata

=cut

=head2 GetM5nrOntology

=head3 Description

M5NR provides data through a comprehensive non-redundant protein / rRNA database
Return functional hierarchy

=head3 Parameters

=over4

=item * string source

This parameter value can be chosen from the following (the first being default):

 Subsystems - ontology database, type ontology only
 NOG - ontology database, type ontology only
 COG - ontology database, type ontology only
 KO - ontology database, type ontology only

=item * string filter

text of ontology group (filter_level) to filter by

=item * string filter_level

This parameter value can be chosen from the following (the first being default):

 function - bottom ontology level
 level3 - ontology level
 level2 - ontology level
 level1 - top ontology level

=item * string min_level

This parameter value can be chosen from the following (the first being default):

 function - bottom ontology level
 level3 - ontology level
 level2 - ontology level
 level1 - top ontology level


=back

=head3 Return Attributes

=over4

=item * int version

version of the object

=item * string url

resource location of this object instance

=item * list<mapping<string, string>> data

ontology object

=head2 GetM5nrTaxonomy

=head3 Description

M5NR provides data through a comprehensive non-redundant protein / rRNA database
Return organism hierarchy

=head3 Parameters

=over4

=item * string filter

text of taxanomy group (filter_level) to filter by

=item * string filter_level

This parameter value can be chosen from the following (the first being default):

 species - taxonomy level
 genus - taxonomy level
 family - taxonomy level
 order -  taxonomy level
 class -  taxonomy level
 phylum - taxonomy level
 domain - top taxonomy level

=item * string min_level

This parameter value can be chosen from the following (the first being default):

 species - taxonomy level
 genus - taxonomy level
 family - taxonomy level
 order -  taxonomy level
 class -  taxonomy level
 phylum - taxonomy level
 domain - top taxonomy level


=back

=head3 Return Attributes

=over4

=item * int version

version of the object

=item * string url

resource location of this object instance

=item * list<mapping<string, string>> data

taxonomy object

=head2 GetM5nrSources

=head3 Description

M5NR provides data through a comprehensive non-redundant protein / rRNA database
Return all sources in M5NR

=head3 Parameters

=over4

This function has no parameters.

=head3 Return Attributes

=over4

=item * int version

version of the object

=item * string url

resource location of this object instance

=item * list<mapping<string, string>> data

source object

=head2 GetM5nrAccession

=head3 Description

M5NR provides data through a comprehensive non-redundant protein / rRNA database
Return annotation or sequence of given source protein ID

=head3 Parameters

=over4

=item * string order

name of the attribute the returned data is ordered by

=item * string id

unique identifier from source DB

=item * int limit

maximum number of items requested

=item * int offset

zero based index of the first data object to be returned


=back

=head3 Return Attributes

=over4

=item * string next

link to the previous set or null if this is the first set

=item * string prev

link to the next set or null if this is the last set

=item * int version

version of the object

=item * list<mapping<string, string>> data

annotation object

=item * int total_count

total number of available data items

=item * string url

resource location of this object instance

=item * int limit

maximum number of data items returned, default is 10

=item * int offset

zero based index of the first returned data item

=head2 GetM5nrMd5

=head3 Description

M5NR provides data through a comprehensive non-redundant protein / rRNA database
Return annotation(s) or sequence of given md5sum (M5NR ID)

=head3 Parameters

=over4

=item * string source

source name to restrict search by

=item * int sequence

if true return sequence output, else return annotation output, default is false

=item * string order

name of the attribute the returned data is ordered by

=item * string id

unique identifier in form of md5 checksum

=item * int limit

maximum number of items requested

=item * int offset

zero based index of the first data object to be returned


=back

=head3 Return Attributes

=over4

=item * string next

link to the previous set or null if this is the first set

=item * string prev

link to the next set or null if this is the last set

=item * int version

version of the object

=item * list<mapping<string, string>> data

annotation object

=item * int total_count

total number of available data items

=item * string url

resource location of this object instance

=item * int limit

maximum number of data items returned, default is 10

=item * int offset

zero based index of the first returned data item

=head2 GetM5nrFunction

=head3 Description

M5NR provides data through a comprehensive non-redundant protein / rRNA database
Return annotations for function names containing the given text

=head3 Parameters

=over4

=item * string source

source name to restrict search by

=item * string text

text string of partial function name

=item * string order

name of the attribute the returned data is ordered by

=item * int exact

if true return only those annotations that exactly match input text, default is false

=item * int limit

maximum number of items requested

=item * int offset

zero based index of the first data object to be returned


=back

=head3 Return Attributes

=over4

=item * string next

link to the previous set or null if this is the first set

=item * string prev

link to the next set or null if this is the last set

=item * int version

version of the object

=item * list<mapping<string, string>> data

annotation object

=item * int total_count

total number of available data items

=item * string url

resource location of this object instance

=item * int limit

maximum number of data items returned, default is 10

=item * int offset

zero based index of the first returned data item

=head2 GetM5nrOrganism

=head3 Description

M5NR provides data through a comprehensive non-redundant protein / rRNA database
Return annotations for organism names containing the given text

=head3 Parameters

=over4

=item * string source

source name to restrict search by

=item * string text

text string of partial organism name

=item * string order

name of the attribute the returned data is ordered by

=item * int exact

if true return only those annotations that exactly match input text, default is false

=item * int limit

maximum number of items requested

=item * int offset

zero based index of the first data object to be returned


=back

=head3 Return Attributes

=over4

=item * string next

link to the previous set or null if this is the first set

=item * string prev

link to the next set or null if this is the last set

=item * int version

version of the object

=item * list<mapping<string, string>> data

annotation object

=item * int total_count

total number of available data items

=item * string url

resource location of this object instance

=item * int limit

maximum number of data items returned, default is 10

=item * int offset

zero based index of the first returned data item

=head2 GetM5nrSequence

=head3 Description

M5NR provides data through a comprehensive non-redundant protein / rRNA database
Return annotation(s) for md5sum (M5NR ID) of given sequence

=head3 Parameters

=over4

=item * string source

source name to restrict search by

=item * string text

text string of protein sequence

=item * string order

name of the attribute the returned data is ordered by

=item * int limit

maximum number of items requested

=item * int offset

zero based index of the first data object to be returned


=back

=head3 Return Attributes

=over4

=item * string next

link to the previous set or null if this is the first set

=item * string prev

link to the next set or null if this is the last set

=item * int version

version of the object

=item * list<mapping<string, string>> data

annotation object

=item * int total_count

total number of available data items

=item * string url

resource location of this object instance

=item * int limit

maximum number of data items returned, default is 10

=item * int offset

zero based index of the first returned data item

=head2 PostM5nrAccession

=head3 Description

M5NR provides data through a comprehensive non-redundant protein / rRNA database
Return annotations of given source protein IDs

=head3 Parameters

=over4

=item * string order

name of the attribute the returned data is ordered by

=item * list<string> data

unique identifier from source DB

=item * int limit

maximum number of items requested

=item * int offset

zero based index of the first data object to be returned


=back

=head3 Return Attributes

=over4

=item * string next

link to the previous set or null if this is the first set

=item * string prev

link to the next set or null if this is the last set

=item * int version

version of the object

=item * list<mapping<string, string>> data

annotation object

=item * int total_count

total number of available data items

=item * string url

resource location of this object instance

=item * int limit

maximum number of data items returned, default is 10

=item * int offset

zero based index of the first returned data item

=head2 PostM5nrMd5

=head3 Description

M5NR provides data through a comprehensive non-redundant protein / rRNA database
Return annotations of given md5sums (M5NR ID)

=head3 Parameters

=over4

=item * string source

source name to restrict search by

=item * string order

name of the attribute the returned data is ordered by

=item * list<string> data

unique identifier in form of md5 checksum

=item * int limit

maximum number of items requested

=item * int offset

zero based index of the first data object to be returned


=back

=head3 Return Attributes

=over4

=item * string next

link to the previous set or null if this is the first set

=item * string prev

link to the next set or null if this is the last set

=item * int version

version of the object

=item * list<mapping<string, string>> data

annotation object

=item * int total_count

total number of available data items

=item * string url

resource location of this object instance

=item * int limit

maximum number of data items returned, default is 10

=item * int offset

zero based index of the first returned data item

=head2 PostM5nrFunction

=head3 Description

M5NR provides data through a comprehensive non-redundant protein / rRNA database
Return annotations for function names containing the given texts

=head3 Parameters

=over4

=item * string source

source name to restrict search by

=item * string order

name of the attribute the returned data is ordered by

=item * int exact

if true return only those annotations that exactly match input text, default is false

=item * list<string> data

text string of partial function name

=item * int limit

maximum number of items requested

=item * int offset

zero based index of the first data object to be returned


=back

=head3 Return Attributes

=over4

=item * string next

link to the previous set or null if this is the first set

=item * string prev

link to the next set or null if this is the last set

=item * int version

version of the object

=item * list<mapping<string, string>> data

annotation object

=item * int total_count

total number of available data items

=item * string url

resource location of this object instance

=item * int limit

maximum number of data items returned, default is 10

=item * int offset

zero based index of the first returned data item

=head2 PostM5nrOrganism

=head3 Description

M5NR provides data through a comprehensive non-redundant protein / rRNA database
Return annotations for organism names containing the given texts

=head3 Parameters

=over4

=item * string source

source name to restrict search by

=item * string order

name of the attribute the returned data is ordered by

=item * int exact

if true return only those annotations that exactly match input text, default is false

=item * list<string> data

text string of partial organism name

=item * int limit

maximum number of items requested

=item * int offset

zero based index of the first data object to be returned


=back

=head3 Return Attributes

=over4

=item * string next

link to the previous set or null if this is the first set

=item * string prev

link to the next set or null if this is the last set

=item * int version

version of the object

=item * list<mapping<string, string>> data

annotation object

=item * int total_count

total number of available data items

=item * string url

resource location of this object instance

=item * int limit

maximum number of data items returned, default is 10

=item * int offset

zero based index of the first returned data item

=head2 PostM5nrSequence

=head3 Description

M5NR provides data through a comprehensive non-redundant protein / rRNA database
Return annotations for md5s (M5NR ID) of given sequences

=head3 Parameters

=over4

=item * string source

source name to restrict search by

=item * string order

name of the attribute the returned data is ordered by

=item * list<string> data

text string of protein sequence

=item * int limit

maximum number of items requested

=item * int offset

zero based index of the first data object to be returned


=back

=head3 Return Attributes

=over4

=item * string next

link to the previous set or null if this is the first set

=item * string prev

link to the next set or null if this is the last set

=item * int version

version of the object

=item * list<mapping<string, string>> data

annotation object

=item * int total_count

total number of available data items

=item * string url

resource location of this object instance

=item * int limit

maximum number of data items returned, default is 10

=item * int offset

zero based index of the first returned data item

=cut

=head2 GetMatrixOrganism

=head3 Description

A profile in biom format that contains abundance counts
Returns a BIOM object.

=head3 Parameters

=over4

=item * string source

This parameter value can be chosen from the following (the first being default):

 M5NR - comprehensive protein database
 M5RNA - comprehensive RNA database
 RefSeq - protein database, type organism, function, feature
 GenBank - protein database, type organism, function, feature
 IMG - protein database, type organism, function, feature
 SEED - protein database, type organism, function, feature
 TrEMBL - protein database, type organism, function, feature
 SwissProt - protein database, type organism, function, feature
 PATRIC - protein database, type organism, function, feature
 KEGG - protein database, type organism, function, feature
 RDP - RNA database, type organism, function, feature
 Greengenes - RNA database, type organism, function, feature
 LSU - RNA database, type organism, function, feature
 SSU - RNA database, type organism, function, feature

=item * int asynchronous

if true, return process id to query status resource for results.  default is false.

=item * string result_type

This parameter value can be chosen from the following (the first being default):

 abundance - number of reads with hits in annotation
 evalue - average e-value exponent of hits in annotation
 identity - average percent identity of hits in annotation
 length - average alignment length of hits in annotation

=item * string filter

filter the return results to only include abundances based on genes with this function

=item * string group_level

This parameter value can be chosen from the following (the first being default):

 strain - bottom organism taxanomic level
 species - organism type level
 genus - organism taxanomic level
 family - organism taxanomic level
 order - organism taxanomic level
 class - organism taxanomic level
 phylum - organism taxanomic level
 domain - top organism taxanomic level

=item * int taxid

if true, return annotation ID as NCBI tax id. Only for group_levels with a tax_id

=item * string grep

filter the return results to only include annotations that contain this text

=item * int length

value for minimum alignment length cutoff: default is 15

=item * int identity

percent value for minimum % identity cutoff: default is 60

=item * int evalue

negative exponent value for maximum e-value cutoff: default is 5

=item * string filter_source

This parameter value can be chosen from the following (the first being default):

 Subsystems - ontology database, type ontology only
 NOG - ontology database, type ontology only
 COG - ontology database, type ontology only
 KO - ontology database, type ontology only

=item * string id

one or more metagenome or project unique identifier

=item * int hide_metadata

if false, return metagenome metadata set in 'columns' object.  default is false.

=item * string hit_type

This parameter value can be chosen from the following (the first being default):

 all - returns results based on all organisms that map to top hit per read-feature
 single - returns results based on a single organism for top hit per read-feature
 lca - returns results based on the Least Common Ancestor for all organisms (M5NR+M5RNA only) that map to hits from a read-feature

=item * string filter_level

This parameter value can be chosen from the following (the first being default):

 function - bottom function ontology level
 level3 - function ontology level
 level2 - function ontology level
 level1 - top function ontology level


=back

=head3 Return Attributes

=over4

=item * string generated_by

identifier of the data generator

=item * string matrix_type

type of the data encoding matrix (dense or sparse)

=item * string date

time the output data was generated

=item * list<list<float>> data

the matrix values

=item * list<mapping<string, string>> rows

rows object

=item * string matrix_element_value

result_type of the elements in the return matrix

=item * string matrix_element_type

data type of the elements in the return matrix

=item * string format_url

url to the format specification

=item * string format

format specification name

=item * list<mapping<string, string>> columns

columns object

=item * string url

resource location of this object instance

=item * list<int> shape

list of the dimension sizes of the return matrix

=item * string id

unique object identifier

=item * string type

type of the data in the return table (taxon, function or gene)

=head2 GetMatrixFunction

=head3 Description

A profile in biom format that contains abundance counts
Returns a BIOM object.

=head3 Parameters

=over4

=item * string source

This parameter value can be chosen from the following (the first being default):

 Subsystems - ontology database, type ontology only
 NOG - ontology database, type ontology only
 COG - ontology database, type ontology only
 KO - ontology database, type ontology only

=item * int asynchronous

if true, return process id to query status resource for results.  default is false.

=item * string result_type

This parameter value can be chosen from the following (the first being default):

 abundance - number of reads with hits in annotation
 evalue - average e-value exponent of hits in annotation
 identity - average percent identity of hits in annotation
 length - average alignment length of hits in annotation

=item * string filter

filter the return results to only include abundances based on genes with this organism

=item * string group_level

This parameter value can be chosen from the following (the first being default):

 function - bottom function ontology level
 level3 - function ontology level
 level2 - function ontology level
 level1 - top function ontology level

=item * string grep

filter the return results to only include annotations that contain this text

=item * int length

value for minimum alignment length cutoff: default is 15

=item * int identity

percent value for minimum % identity cutoff: default is 60

=item * int evalue

negative exponent value for maximum e-value cutoff: default is 5

=item * string filter_source

This parameter value can be chosen from the following (the first being default):

 M5NR - comprehensive protein database
 M5RNA - comprehensive RNA database
 RefSeq - protein database, type organism, function, feature
 GenBank - protein database, type organism, function, feature
 IMG - protein database, type organism, function, feature
 SEED - protein database, type organism, function, feature
 TrEMBL - protein database, type organism, function, feature
 SwissProt - protein database, type organism, function, feature
 PATRIC - protein database, type organism, function, feature
 KEGG - protein database, type organism, function, feature
 RDP - RNA database, type organism, function, feature
 Greengenes - RNA database, type organism, function, feature
 LSU - RNA database, type organism, function, feature
 SSU - RNA database, type organism, function, feature

=item * string id

one or more metagenome or project unique identifier

=item * int hide_metadata

if false return metagenome metadata set in 'columns' object

=item * string filter_level

This parameter value can be chosen from the following (the first being default):

 strain - bottom organism taxanomic level
 species - organism type level
 genus - organism taxanomic level
 family - organism taxanomic level
 order - organism taxanomic level
 class - organism taxanomic level
 phylum - organism taxanomic level
 domain - top organism taxanomic level


=back

=head3 Return Attributes

=over4

=item * string generated_by

identifier of the data generator

=item * string matrix_type

type of the data encoding matrix (dense or sparse)

=item * string date

time the output data was generated

=item * list<list<float>> data

the matrix values

=item * list<mapping<string, string>> rows

rows object

=item * string matrix_element_value

result_type of the elements in the return matrix

=item * string matrix_element_type

data type of the elements in the return matrix

=item * string format_url

url to the format specification

=item * string format

format specification name

=item * list<mapping<string, string>> columns

columns object

=item * string url

resource location of this object instance

=item * list<int> shape

list of the dimension sizes of the return matrix

=item * string id

unique object identifier

=item * string type

type of the data in the return table (taxon, function or gene)

=head2 GetMatrixFeature

=head3 Description

A profile in biom format that contains abundance counts
Returns a BIOM object.

=head3 Parameters

=over4

=item * string source

This parameter value can be chosen from the following (the first being default):

 RefSeq - protein database, type organism, function, feature
 GenBank - protein database, type organism, function, feature
 IMG - protein database, type organism, function, feature
 SEED - protein database, type organism, function, feature
 TrEMBL - protein database, type organism, function, feature
 SwissProt - protein database, type organism, function, feature
 PATRIC - protein database, type organism, function, feature
 KEGG - protein database, type organism, function, feature
 RDP - RNA database, type organism, function, feature
 Greengenes - RNA database, type organism, function, feature
 LSU - RNA database, type organism, function, feature
 SSU - RNA database, type organism, function, feature

=item * int asynchronous

if true, return process id to query status resource for results.  default is false.

=item * string result_type

This parameter value can be chosen from the following (the first being default):

 abundance - number of reads with hits in annotation
 evalue - average e-value exponent of hits in annotation
 identity - average percent identity of hits in annotation
 length - average alignment length of hits in annotation

=item * string grep

filter the return results to only include annotations that contain this text

=item * int length

value for minimum alignment length cutoff: default is 15

=item * int evalue

negative exponent value for maximum e-value cutoff: default is 5

=item * int identity

percent value for minimum % identity cutoff: default is 60

=item * string id

one or more metagenome or project unique identifier

=item * int hide_metadata

if false return metagenome metadata set in 'columns' object


=back

=head3 Return Attributes

=over4

=item * string generated_by

identifier of the data generator

=item * string matrix_type

type of the data encoding matrix (dense or sparse)

=item * string date

time the output data was generated

=item * list<list<float>> data

the matrix values

=item * list<mapping<string, string>> rows

rows object

=item * string matrix_element_value

result_type of the elements in the return matrix

=item * string matrix_element_type

data type of the elements in the return matrix

=item * string format_url

url to the format specification

=item * string format

format specification name

=item * list<mapping<string, string>> columns

columns object

=item * string url

resource location of this object instance

=item * list<int> shape

list of the dimension sizes of the return matrix

=item * string id

unique object identifier

=item * string type

type of the data in the return table (taxon, function or gene)

=cut

=head2 GetMetadataTemplate

=head3 Description

Metagenomic metadata is data providing information about one or more aspects of a set sequences from a sample of some environment
Returns static template for metadata object relationships and types

=head3 Parameters

=over4

This function has no parameters.

=head3 Return Attributes

=over4

=item * mapping<string, string> ep

eps and their metadata

=item * mapping<string, string> project

projects and their metadata

=item * mapping<string, string> library

libraries and their metadata

=item * mapping<string, string> sample

samples and their metadata

=head2 GetMetadataCv

=head3 Description

Metagenomic metadata is data providing information about one or more aspects of a set sequences from a sample of some environment
Returns static controlled vocabularies used in metadata

=head3 Parameters

=over4

This function has no parameters.

=head3 Return Attributes

=over4

=item * mapping<string, string> ontology

ontology IDs for metadata

=item * mapping<string, string> ont_id

term IDs for metadata

=item * mapping<string, string> select

list of CV terms for metadata

=head2 GetMetadataExport

=head3 Description

Metagenomic metadata is data providing information about one or more aspects of a set sequences from a sample of some environment
Returns full nested metadata for a project in same format as template

=head3 Parameters

=over4

=item * string id

unique object identifier


=back

=head3 Return Attributes

=over4

=item * int sampleNum

number of samples in project

=item * list<mapping<string, string>> samples

sample object containing sample metadata, sample libraries, sample envPackage

=item * string name

human readable identifier

=item * mapping<string, string> data

hash of metadata by label

=item * string id

unique object identifier

=head2 PostMetadataValidate

=head3 Description

Metagenomic metadata is data providing information about one or more aspects of a set sequences from a sample of some environment
Validate given metadata spreadsheet

=head3 Parameters

=over4

=item * string upload

xlsx or xls format spreadsheet with metadata


=back

=head3 Return Attributes

=over4

=item * mapping<string, string> metadata

valid metadata object for project and its samples and libraries

=item * string message

if not valid, reason why

=item * int is_valid

the metadata sheet is valid

=head2 GetMetadataValidate

=head3 Description

Metagenomic metadata is data providing information about one or more aspects of a set sequences from a sample of some environment
Validate given metadata value

=head3 Parameters

=over4

=item * string group

This parameter value can be chosen from the following (the first being default):

 mixs - label is part of MIxS (minimal) metadata
 mims - label is part of MIMS (metagenome) metadata
 migs - label is part of MIGS (genome) metadata

=item * string value

metadata value

=item * string category

This parameter value can be chosen from the following (the first being default):

 project - label belongs to project metadata
 sample - label belongs to sample metadata
 library - label belongs to library metadata
 env_package - label belongs to env_package metadata

=item * string label

metadata label


=back

=head3 Return Attributes

=over4

=item * string message

if not valid, reason why

=item * int is_valid

the inputed value is valid for the given category and label

=cut

=head2 GetMetagenomeQuery

=head3 Description

A metagenome is an analyzed set sequences from a sample of some environment
Returns a set of data matching the query criteria.

=head3 Parameters

=over4

=item * string verbosity

This parameter value can be chosen from the following (the first being default):

 minimal - returns only minimal information
 mixs - returns all GSC MIxS metadata
 metadata - returns minimal with metadata
 stats - returns minimal with statistics
 full - returns all metadata and statistics

=item * string function

search parameter: query string for function

=item * string status

This parameter value can be chosen from the following (the first being default):

 both - returns all data (public and private) user has access to view
 public - returns all public data
 private - returns private data user has access to view

=item * string match

This parameter value can be chosen from the following (the first being default):

 all - return metagenomes that match all search parameters
 any - return metagenomes that match any search parameters

=item * string direction

This parameter value can be chosen from the following (the first being default):

 asc - sort by ascending order
 desc - sort by descending order

=item * string order

metagenome object field to sort by (default is id)

=item * string metadata

search parameter: query string for any metadata field

=item * int limit

maximum number of items requested

=item * string organism

search parameter: query string for organism

=item * string md5

search parameter: md5 checksum of feature sequence

=item * int offset

zero based index of the first data object to be returned


=back

=head3 Return Attributes

=over4

=item * string next

link to the previous set or null if this is the first set

=item * string prev

link to the next set or null if this is the last set

=item * int version

version of the object

=item * list<mapping<string, string>> data

metagenome object

=item * int total_count

total number of available data items

=item * string order

name of the attribute the returned data is ordered by

=item * string url

resource location of this object instance

=item * int limit

maximum number of data items returned, default is 10

=item * int offset

zero based index of the first returned data item

=head2 GetMetagenomeInstance

=head3 Description

A metagenome is an analyzed set sequences from a sample of some environment
Returns a single data object.

=head3 Parameters

=over4

=item * string verbosity

This parameter value can be chosen from the following (the first being default):

 minimal - returns only minimal information
 metadata - returns minimal with metadata
 stats - returns minimal with statistics
 full - returns all metadata and statistics

=item * string id

unique object identifier


=back

=head3 Return Attributes

=over4

=item * mapping<string, string> statistics

key value pairs describing statistics

=item * string status

ARRAY(0x7f86b38ffe20)

=item * int version

version of the metagenome

=item * string project

reference to the project object

=item * string name

name of metagenome

=item * string sequence_type

sequencing type

=item * string library

reference to the related library object

=item * string created

time the metagenome was first created

=item * string url

resource location of this object instance

=item * string id

unique metagenome identifier

=item * string sample

reference to the related sample object

=item * mapping<string, string> metadata

key value pairs describing all metadata

=item * mapping<string, string> mixs

key value pairs describing MIxS metadata

=cut

=head2 GetProjectQuery

=head3 Description

A project is a composition of samples, libraries and metagenomes being analyzed in a global context.
Returns a set of data matching the query criteria.

=head3 Parameters

=over4

=item * string verbosity

This parameter value can be chosen from the following (the first being default):

 minimal - returns only minimal information
 verbose - returns all metadata
 full - returns all metadata and references

=item * string order

This parameter value can be chosen from the following (the first being default):

 id - return data objects ordered by id
 name - return data objects ordered by name

=item * int limit

maximum number of items requested

=item * int offset

zero based index of the first data object to be returned


=back

=head3 Return Attributes

=over4

=item * string next

link to the previous set or null if this is the first set

=item * string prev

link to the next set or null if this is the last set

=item * string order

name of the attribute the returned data is ordered by

=item * int limit

maximum number of data items returned, default is 10

=item * list<mapping<string, string>> data

list of the project objects

=item * int offset

zero based index of the first returned data item

=item * int total_count

total number of available data items

=head2 GetProjectInstance

=head3 Description

A project is a composition of samples, libraries and metagenomes being analyzed in a global context.
Returns a single data object.

=head3 Parameters

=over4

=item * string verbosity

This parameter value can be chosen from the following (the first being default):

 minimal - returns only minimal information
 verbose - returns all metadata
 full - returns all metadata and references

=item * string id

unique object identifier


=back

=head3 Return Attributes

=over4

=item * string status

ARRAY(0x7f86b3903970)

=item * int version

version of the object

=item * string name

human readable identifier

=item * string description

a short, comprehensive description of the project

=item * string created

time the object was first created

=item * string funding_source

the official name of the source of funding of this project

=item * string url

resource location of this object instance

=item * mapping<string, string> metadata

key value pairs describing metadata

=item * string id

unique object identifier

=item * string pi

the first and last name of the principal investigator of the project

=cut

=head2 GetSampleQuery

=head3 Description

A metagenomic sample from some environment.
Returns a set of data matching the query criteria.

=head3 Parameters

=over4

=item * string order

This parameter value can be chosen from the following (the first being default):

 id - return data objects ordered by id
 name - return data objects ordered by name

=item * int limit

maximum number of items requested

=item * int offset

zero based index of the first data object to be returned


=back

=head3 Return Attributes

=over4

=item * string next

link to the previous set or null if this is the first set

=item * string prev

link to the next set or null if this is the last set

=item * string order

name of the attribute the returned data is ordered by

=item * int limit

maximum number of data items returned, default is 10

=item * list<mapping<string, string>> data

list of sample objects

=item * int offset

zero based index of the first returned data item

=item * int total_count

total number of available data items

=head2 GetSampleInstance

=head3 Description

A metagenomic sample from some environment.
Returns a single data object.

=head3 Parameters

=over4

=item * string verbosity

This parameter value can be chosen from the following (the first being default):

 minimal - returns only minimal information
 verbose - returns all metadata
 full - returns all metadata and references

=item * string id

unique object identifier


=back

=head3 Return Attributes

=over4

=item * int version

version of the object

=item * string project

reference to the project of this sample

=item * string name

human readable identifier

=item * string created

time the object was first created

=item * mapping<string, string> env_package

environmental package object

=item * string url

resource location of this object instance

=item * string id

unique object identifier

=item * mapping<string, string> metadata

key value pairs describing metadata

=cut

